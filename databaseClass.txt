CREATE TABLE user_table(id INT AUTO_INCREMENT PRIMARY KEY, fullname VARCHAR(50), email VARCHAR(50) UNIQUE, address VARCHAR(255), date_created DATETIME DEFAULT CURRENT_TIMESTAMP);

INSERT INTO user_table(fullname, email, address) VALUES
    ('John Doe', 'johndoe@example.com', '123 Main St, Springfield, IL, 62701'),
    ('Jane Smith', 'janesmith@example.com', '456 Elm St, Shelbyville, IL, 62702'),
    ('Alice Johnson', 'alicejohnson@example.com', '789 Oak St, Capital City, IL, 62703'),
    ('Bob Brown', 'bobbrown@example.com', '101 Pine St, Ogdenville, IL, 62704'),
    ('Charlie Davis', 'charliedavis@example.com', '202 Maple St, North Haverbrook, IL, 62705'),
    ('Diana Evans', 'dianaevans@example.com', '303 Birch St, Brockway, IL, 62706'),
    ('Eve Wilson', 'evewilson@example.com', '404 Cedar St, Springfield, IL, 62707'),
    ('Frank Moore', 'frankmoore@example.com', '505 Walnut St, Shelbyville, IL, 62708'),
    ('Grace Taylor', 'gracetaylor@example.com', '606 Spruce St, Capital City, IL, 62709'),
    ('Hank White', 'hankwhite@example.com', '707 Cherry St, Ogdenville, IL, 62710')


CREATE TABLE product_table(
    id INT PRIMARY KEY AUTO_INCREMENT, 
    name VARCHAR(50), 
    quantity INT, 
    price FLOAT, 
    approved BOOLEAN DEFAULT False,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES user_table(id) ON DELETE CASCADE
);


ALTER TABLE product_table ADD COLUMN date_created DATETIME DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE product_table CHANGE user_id created_by INT;

INSERT INTO product_table(name, quantity, price, approved, created_by) VALUES
('Laptop', 10, 999.99, 1, 1),
('Smartphone', 25, 499.99, 0, 2),
('Tablet', 15, 299.99, 1, 3),
('Headphones', 50, 99.99, 1, 4),
('Keyboard', 30, 49.99, 0, 5),
('Mouse', 40, 29.99, 1, 6),
('Monitor', 20, 199.99, 0, 7),
('Printer', 10, 149.99, 1, 8),
('External Hard Drive', 35, 89.99, 0, 9),
('USB Flash Drive', 100, 19.99, 1, 10),
('Smartwatch', 20, 199.99, 1, 1),
('Bluetooth Speaker', 30, 79.99, 0, 2),
('Gaming Console', 15, 499.99, 1, 3),
('Camera', 10, 599.99, 0, 4),
('Drone', 5, 799.99, 1, 5),
('Projector', 8, 299.99, 0, 6),
('Router', 25, 89.99, 1, 7),
('Smart Bulb', 50, 19.99, 0, 8),
('Fitness Tracker', 40, 99.99, 1, 9),
('E-Reader', 15, 129.99, 0, 10),
('Power Bank', 60, 39.99, 1, 1),
('Wireless Earbuds', 35, 149.99, 0, 2),
('Hard Drive', 20, 89.99, 1, 3),
('SSD', 25, 129.99, 0, 4),
('Graphics Card', 10, 699.99, 1, 5),
('Motherboard', 12, 199.99, 0, 6),
('CPU', 8, 299.99, 1, 7),
('RAM', 30, 99.99, 0, 8),
('Cooling Fan', 40, 29.99, 1, 9),
('Webcam', 25, 59.99, 0, 10),
('Microphone', 15, 79.99, 1, 1),
('External SSD', 10, 199.99, 0, 2),
('Smart Thermostat', 20, 149.99, 1, 3),
('Smart Lock', 15, 129.99, 0, 4),
('Smart Plug', 30, 29.99, 1, 5),
('Smart Display', 10, 199.99, 0, 6),
('Smart Hub', 5, 99.99, 1, 7),
('Smart Scale', 20, 49.99, 0, 8),
('Smart Doorbell', 15, 199.99, 1, 9),
('Smart Security Camera', 10, 149.99, 0, 10),
('Smart Vacuum', 8, 299.99, 1, 1),
('Smart Oven', 5, 499.99, 0, 2),
('Smart Fridge', 3, 999.99, 1, 3),
('Smart Washer', 4, 799.99, 0, 4),
('Smart Dryer', 4, 699.99, 1, 5),
('Smart Dishwasher', 5, 599.99, 0, 6),
('Smart Air Purifier', 10, 199.99, 1, 7),
('Smart Humidifier', 15, 99.99, 0, 8),
('Smart Dehumidifier', 10, 149.99, 1, 9),
('Smart Fan', 20, 79.99, 0, 10),
('Smart Light Strip', 30, 49.99, 1, 1),
('Smart Curtains', 10, 199.99, 0, 2),
('Smart Blinds', 15, 149.99, 1, 3),
('Smart Mirror', 5, 299.99, 0, 4),
('Smart Toilet', 3, 499.99, 1, 5),
('Smart Shower', 4, 399.99, 0, 6),
('Smart Faucet', 5, 199.99, 1, 7),
('Smart Grill', 8, 299.99, 0, 8),
('Smart Coffee Maker', 10, 149.99, 1, 9),
('Smart Toaster', 15, 79.99, 0, 10),
('Smart Blender', 20, 99.99, 1, 1),
('Smart Juicer', 10, 129.99, 0, 2),
('Smart Food Processor', 8, 199.99, 1, 3),
('Smart Slow Cooker', 12, 149.99, 0, 4),
('Smart Pressure Cooker', 10, 199.99, 1, 5),
('Smart Rice Cooker', 15, 99.99, 0, 6),
('Smart Air Fryer', 20, 149.99, 1, 7),
('Smart Sous Vide', 10, 199.99, 0, 8),
('Smart Ice Maker', 5, 299.99, 1, 9),
('Smart Water Purifier', 8, 199.99, 0, 10),
('Smart Trash Can', 10, 149.99, 1, 1),
('Smart Pet Feeder', 15, 99.99, 0, 2),
('Smart Pet Camera', 20, 129.99, 1, 3),
('Smart Litter Box', 10, 199.99, 0, 4),
('Smart Aquarium', 5, 299.99, 1, 5),
('Smart Garden', 8, 199.99, 0, 6),
('Smart Sprinkler', 10, 149.99, 1, 7),
('Smart Weather Station', 15, 99.99, 0, 8),
('Smart Air Quality Monitor', 10, 199.99, 1, 9),
('Smart Water Leak Detector', 20, 49.99, 0, 10),
('Smart Smoke Detector', 15, 99.99, 1, 1),
('Smart Carbon Monoxide Detector', 10, 129.99, 0, 2),
('Smart Door Sensor', 20, 29.99, 1, 3),
('Smart Window Sensor', 15, 39.99, 0, 4),
('Smart Motion Sensor', 25, 49.99, 1, 5),
('Smart Glass Break Sensor', 10, 59.99, 0, 6),
('Smart Siren', 5, 99.99, 1, 7),
('Smart Keypad', 8, 79.99, 0, 8),
('Smart Garage Door Opener', 10, 199.99, 1, 9),
('Smart Car Charger', 15, 149.99, 0, 10);


DATA QUERY LANGUAGE

SELECT * FROM `product_table` WHERE price > 300;
SELECT * FROM `product_table` LIMIT 5;
SELECT * FROM `product_table` LIMIT 32347243239 OFFSET 5;
SELECT * FROM `product_table` LIMIT 5, 2423452352342;
SELECT *, 
CASE
	WHEN price > 700 THEN 'expensive'
    WHEN price > 400 THEN 'minimal'
    ELSE 'cheap'
    END AS price_category
FROM `product_table`

UPDATE product_table SET price_category = 
CASE
WHEN price > 700 THEN 'expensive'
    WHEN price > 400 THEN 'minimal'
    ELSE 'cheap'
END;

SELECT * FROM `product_table` WHERE  name LIKE 'C%';
SELECT * FROM `product_table` WHERE name LIKE '%e';
SELECT * FROM `product_table` WHERE name LIKE 'C%e';
SELECT * FROM `product_table` WHERE price_category IN ('minimal', 'expensive');
SELECT * FROM `product_table` WHERE price BETWEEN 500 AND 900;
SELECT * FROM `product_table` WHERE approved IS false;
SELECT name, price FROM `product_table` ORDER BY price;
SELECT name, price FROM `product_table` ORDER BY price DESC;
SELECT price_category, COUNT(*) AS 'total' FROM `product_table` GROUP BY price_category;
SELECT SUM(price) AS 'TOTAL PRICE' FROM `product_table`;
SELECT AVG(price) AS 'AVG PRICE' FROM `product_table`;
SELECT price_category, AVG(price) as 'AVG.Price' FROM `product_table` GROUP BY price_category;
SELECT name FROM `product_table` WHERE price = (SELECT MIN(price) FROM product_table);
SELECT * FROM user_table INNER JOIN product_table ON user_table.id = product_table.created_by;
SELECT * FROM user_table AS u INNER JOIN product_table AS p ON u.id = p.created_by;

CREATE TABLE order_table (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    product_id INT,
    quantity INT,
    order_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_order_user
    	FOREIGN KEY (user_id)
    	REFERENCES user_table(id)
    	ON DELETE CASCADE,
    CONSTRAINT fk_order_product
    	FOREIGN KEY (product_id)
    	REFERENCES product_table(id)
    	ON DELETE CASCADE
    )

INSERT INTO order_table (id, user_id, product_id, quantity) VALUES
(1001, 7, 55, 3), (1002, 2, 22, 4), (1003, 9, 13, 2),
(1004, 4, 8, 1), (1005, 1, 35, 5), (1006, 6, 60, 3),
(1007, 10, 5, 2), (1008, 8, 47, 1), (1009, 3, 72, 4),
(1010, 5, 11, 2), (1011, 2, 90, 3), (1012, 1, 18, 1),
(1013, 3, 29, 5), (1014, 7, 77, 2), (1015, 9, 33, 4),
(1016, 6, 42, 3), (1017, 10, 58, 1), (1018, 4, 24, 2),
(1019, 8, 67, 5), (1020, 5, 9, 3), (1021, 1, 26, 1),
(1022, 2, 15, 4), (1023, 3, 88, 2), (1024, 9, 41, 5),
(1025, 6, 73, 3), (1026, 4, 30, 1), (1027, 7, 50, 2),
(1028, 8, 39, 4), (1029, 10, 21, 5), (1030, 5, 62, 3),
(1031, 1, 17, 1), (1032, 2, 70, 2), (1033, 3, 83, 4),
(1034, 9, 56, 3), (1035, 6, 31, 5), (1036, 4, 20, 2),
(1037, 7, 48, 1), (1038, 8, 37, 4), (1039, 10, 85, 3),
(1040, 5, 14, 2), (1041, 1, 80, 5), (1042, 2, 45, 1),
(1043, 3, 54, 3), (1044, 9, 12, 4), (1045, 6, 77, 2),
(1046, 4, 33, 5), (1047, 7, 66, 1), (1048, 8, 81, 3),
(1049, 10, 7, 2), (1050, 5, 28, 4), (1051, 1, 63, 3),
(1052, 2, 16, 1), (1053, 3, 85, 5), (1054, 9, 40, 2),
(1055, 6, 74, 4), (1056, 4, 57, 3), (1057, 7, 22, 1),
(1058, 8, 59, 2), (1059, 10, 31, 4), (1060, 5, 69, 3),
(1061, 1, 47, 5), (1062, 2, 11, 2), (1063, 3, 78, 1),
(1064, 9, 53, 4), (1065, 6, 19, 3), (1066, 4, 88, 2),
(1067, 7, 37, 5), (1068, 8, 66, 1), (1069, 10, 25, 3),
(1070, 5, 49, 4), (1071, 1, 82, 2), (1072, 2, 58, 1),
(1073, 3, 35, 5), (1074, 9, 29, 4), (1075, 6, 71, 2),
(1076, 4, 86, 3), (1077, 7, 32, 1), (1078, 8, 55, 4),
(1079, 10, 14, 2), (1080, 5, 77, 5), (1081, 1, 40, 1),
(1082, 2, 20, 3), (1083, 3, 39, 4), (1084, 9, 68, 2),
(1085, 6, 37, 5), (1086, 4, 83, 1), (1087, 7, 59, 3),
(1088, 8, 15, 4), (1089, 10, 72, 2), (1090, 5, 25, 1),
(1091, 1, 89, 5), (1092, 2, 36, 2), (1093, 3, 60, 4),
(1094, 9, 43, 3), (1095, 6, 12, 1), (1096, 4, 79, 5),
(1097, 7, 90, 2), (1098, 8, 50, 3), (1099, 10, 19, 4),
(1100, 5, 67, 1);


SELECT * FROM user_table as u LEFT JOIN order_table as o ON u.id = o.user_id;
SELECT u.id, u.fullname, o.product_id, o.quantity FROM user_table as u LEFT JOIN order_table as o ON u.id = o.user_id;
SELECT u.id, u.fullname, p.name, o.quantity FROM user_table as u LEFT JOIN order_table as o ON u.id = o.user_id LEFT JOIN product_table as p ON o.user_id = p.created_by;

ASSIGNMENT 
1. PROVIDE THE TOTAL AMOUNT PER ORDER 
2. SUM OF THE ORDER
3. THE TOTAL AMOUNT 